module SlidesFiles.HistoryOfAlgorithms exposing (..)

import GraphicSVG exposing (..)
import BackendFiles.SlideUtilTypes exposing (..)
import BackendFiles.SlideUtilTypes exposing (Msg)
import BackendFiles.Animations exposing (..)
import SlidesFiles.BackgroundSlides exposing (..)

-- made by Tamilla animated by Joshua
historyOfAlgorithms: SlideInput -> Shape Msg
historyOfAlgorithms input = 
  group [
    rect screen.x screen.y  
    |> filled white
    ,
    text (typeWriter "History of Algorithms" 0.1 0.2 (TimeData 0 2 Once) input.time)
    |> bold
    |> size 140 
    |> alignLeft
    |> filled black
    |> move (-650, 90)
    ,
    group 
    [
      text "The word algorithm comes from a Persian mathematician" 
      |> size 60 
      |> alignRight 
      |> filled black
      |> move (700, -10)
      |> addOutline (solid  1 ) black
      ,
      text "who produced the first known book of algebra called" 
      |> size 60 
      |> alignRight 
      |> filled black
      |> move (640, -90)
      |> addOutline (solid  1 ) black
      ,
      text "The Compendious Book on Calculation by" 
      |> size 60 
      |> alignRight 
      |> filled black
      |> move (530, -170)
      |> addOutline (solid  1 ) black
      ,
      text "Completion and Balancing." 
      |> size 60 
      |> alignRight 
      |> filled black
      |> move (350, -250)
      |> addOutline (solid  1 ) black
    ]
    |> animate [(fromTill (TimeData 5 0 Once) (Just easeIn) makeShapeTransparent)] input.time
    ,
    poll
      |> move (-25, 50)
    ,
    poll
      |> move (1615, 50)
    ,
    ngon 6 100 
      |> filled (rgb 221 213 32)
      |> animate [(rotateAni 30)] input.time
      |> move (-300, -550)
      |> addOutline (solid  0 ) black
      |> clipToScreen
    ,
    ngon 6 250 
      |> filled (rgb 209 80 67)
      |> animate [(rotateAni -15)] input.time
      |> move (100, -650)
      |> addOutline (solid  0 ) black
      |> clipToScreen
    ,
    ngon 6 150 
      |> filled (rgb 64 143 225)
      |> animate [(rotateAni -20)] input.time
      |> rotate (degrees -30 )
      |> move (-75, 575)
      |> clipToScreen
  ]
  |> transition [(moveAni 500 2000)] input.transitionTime input.state

poll: Shape Msg
poll = 
  group
  [
    curve (66.944,53.152) [Pull (81.200,53.152) (95.457,53.152),Pull (95.457,51.757) (95.457,50.363),Pull (94.372,50.363) (93.288,50.363),Pull (93.288,50.208) (93.288,50.053),Pull (92.358,48.813) (91.428,47.573),Pull (91.273,47.573) (91.118,47.573),Pull (90.808,46.799) (90.498,46.024),Pull (89.723,45.714) (88.949,45.404),Pull (89.414,45.094) (89.878,44.784),Pull (89.878,44.629) (89.878,44.474),Pull (89.569,44.474) (89.259,44.474),Pull (89.414,44.164) (89.569,43.854),Pull (89.569,42.615) (89.569,41.375),Pull (89.569,41.220) (89.569,41.065),Pull (90.033,40.755) (90.498,40.445),Pull (90.498,40.135) (90.498,39.825),Pull (90.188,39.670) (89.878,39.515),Pull (89.878,39.205) (89.878,38.895),Pull (89.723,38.430) (89.569,37.966),Pull (89.259,37.656) (88.949,37.346),Pull (88.794,37.036) (88.639,36.726),Pull (88.639,-2.789) (88.639,-42.30),Pull (88.794,-42.92) (88.949,-43.54),Pull (89.414,-43.85) (89.878,-44.16),Pull (90.033,-44.62) (90.188,-45.09),Pull (90.033,-45.24) (89.878,-45.40),Pull (89.878,-45.55) (89.878,-45.71),Pull (90.343,-46.02) (90.808,-46.33),Pull (90.653,-46.64) (90.498,-46.95),Pull (89.878,-47.10) (89.259,-47.26),Pull (89.414,-47.57) (89.569,-47.88),Pull (89.569,-48.96) (89.569,-50.05),Pull (89.569,-50.36) (89.569,-50.67),Pull (89.723,-50.67) (89.878,-50.67),Pull (89.878,-50.98) (89.878,-51.29),Pull (89.723,-51.29) (89.569,-51.29),Pull (89.569,-51.44) (89.569,-51.60),Pull (90.188,-52.22) (90.808,-52.84),Pull (90.963,-53.30) (91.118,-53.77),Pull (91.118,-54.08) (91.118,-54.39),Pull (91.583,-54.39) (92.048,-54.39),Pull (92.978,-55.16) (93.907,-55.94),Pull (93.907,-56.40) (93.907,-56.87),Pull (94.682,-56.71) (95.457,-56.56),Pull (95.457,-57.95) (95.457,-59.35),Pull (81.200,-59.35) (66.944,-59.35),Pull (66.944,-57.80) (66.944,-56.25),Pull (66.944,-56.25) (66.944,-56.25),Pull (67.874,-56.25) (68.803,-56.25),Pull (69.578,-55.16) (70.353,-54.08),Pull (70.818,-54.08) (71.283,-54.08),Pull (71.438,-53.46) (71.593,-52.84),Pull (72.058,-52.37) (72.523,-51.91),Pull (72.832,-51.91) (73.142,-51.91),Pull (73.142,-51.75) (73.142,-51.60),Pull (72.832,-51.44) (72.523,-51.29),Pull (72.523,-51.13) (72.523,-50.98),Pull (72.677,-50.82) (72.832,-50.67),Pull (72.832,-50.36) (72.832,-50.05),Pull (72.987,-48.96) (73.142,-47.88),Pull (73.142,-47.57) (73.142,-47.26),Pull (72.677,-47.10) (72.213,-46.95),Pull (72.058,-46.64) (71.903,-46.33),Pull (72.213,-46.02) (72.523,-45.71),Pull (72.523,-45.71) (72.523,-45.71),Pull (72.523,-45.40) (72.523,-45.09),Pull (72.677,-44.47) (72.832,-43.85),Pull (73.297,-43.69) (73.762,-43.54),Pull (73.762,-3.409) (73.762,36.726),Pull (73.297,37.191) (72.832,37.656),Pull (72.677,38.276) (72.523,38.895),Pull (72.523,39.205) (72.523,39.515),Pull (72.213,39.825) (71.903,40.135),Pull (72.213,40.600) (72.523,41.065),Pull (72.832,41.065) (73.142,41.065),Pull (73.142,42.460) (73.142,43.854),Pull (73.142,43.854) (73.142,43.854),Pull (73.142,44.164) (73.142,44.474),Pull (72.832,44.474) (72.523,44.474),Pull (72.523,44.784) (72.523,45.094),Pull (72.677,45.094) (72.832,45.094),Pull (72.832,45.404) (72.832,45.714),Pull (72.213,46.024) (71.593,46.334),Pull (71.593,46.334) (71.593,46.334),Pull (71.438,46.953) (71.283,47.573),Pull (71.283,47.883) (71.283,48.193),Pull (70.973,48.193) (70.663,48.193),Pull (69.733,48.968) (68.803,49.743),Pull (68.958,49.898) (69.113,50.053),Pull (68.029,50.208) (66.944,50.363),Pull (66.944,51.757) (66.944,53.152)]
      |> filled (rgb 167 199 231) 
      |> move (-165,-0.5)
      |> scaleX 9.5
      |> scaleY 10
      ,
    curve (66.944,53.152) [Pull (81.200,53.152) (95.457,53.152),Pull (95.457,51.757) (95.457,50.363),Pull (94.372,50.363) (93.288,50.363),Pull (93.288,50.208) (93.288,50.053),Pull (92.358,48.813) (91.428,47.573),Pull (91.273,47.573) (91.118,47.573),Pull (90.808,46.799) (90.498,46.024),Pull (89.723,45.714) (88.949,45.404),Pull (89.414,45.094) (89.878,44.784),Pull (89.878,44.629) (89.878,44.474),Pull (89.569,44.474) (89.259,44.474),Pull (89.414,44.164) (89.569,43.854),Pull (89.569,42.615) (89.569,41.375),Pull (89.569,41.220) (89.569,41.065),Pull (90.033,40.755) (90.498,40.445),Pull (90.498,40.135) (90.498,39.825),Pull (90.188,39.670) (89.878,39.515),Pull (89.878,39.205) (89.878,38.895),Pull (89.723,38.430) (89.569,37.966),Pull (89.259,37.656) (88.949,37.346),Pull (88.794,37.036) (88.639,36.726),Pull (88.639,-2.789) (88.639,-42.30),Pull (88.794,-42.92) (88.949,-43.54),Pull (89.414,-43.85) (89.878,-44.16),Pull (90.033,-44.62) (90.188,-45.09),Pull (90.033,-45.24) (89.878,-45.40),Pull (89.878,-45.55) (89.878,-45.71),Pull (90.343,-46.02) (90.808,-46.33),Pull (90.653,-46.64) (90.498,-46.95),Pull (89.878,-47.10) (89.259,-47.26),Pull (89.414,-47.57) (89.569,-47.88),Pull (89.569,-48.96) (89.569,-50.05),Pull (89.569,-50.36) (89.569,-50.67),Pull (89.723,-50.67) (89.878,-50.67),Pull (89.878,-50.98) (89.878,-51.29),Pull (89.723,-51.29) (89.569,-51.29),Pull (89.569,-51.44) (89.569,-51.60),Pull (90.188,-52.22) (90.808,-52.84),Pull (90.963,-53.30) (91.118,-53.77),Pull (91.118,-54.08) (91.118,-54.39),Pull (91.583,-54.39) (92.048,-54.39),Pull (92.978,-55.16) (93.907,-55.94),Pull (93.907,-56.40) (93.907,-56.87),Pull (94.682,-56.71) (95.457,-56.56),Pull (95.457,-57.95) (95.457,-59.35),Pull (81.200,-59.35) (66.944,-59.35),Pull (66.944,-57.80) (66.944,-56.25),Pull (66.944,-56.25) (66.944,-56.25),Pull (67.874,-56.25) (68.803,-56.25),Pull (69.578,-55.16) (70.353,-54.08),Pull (70.818,-54.08) (71.283,-54.08),Pull (71.438,-53.46) (71.593,-52.84),Pull (72.058,-52.37) (72.523,-51.91),Pull (72.832,-51.91) (73.142,-51.91),Pull (73.142,-51.75) (73.142,-51.60),Pull (72.832,-51.44) (72.523,-51.29),Pull (72.523,-51.13) (72.523,-50.98),Pull (72.677,-50.82) (72.832,-50.67),Pull (72.832,-50.36) (72.832,-50.05),Pull (72.987,-48.96) (73.142,-47.88),Pull (73.142,-47.57) (73.142,-47.26),Pull (72.677,-47.10) (72.213,-46.95),Pull (72.058,-46.64) (71.903,-46.33),Pull (72.213,-46.02) (72.523,-45.71),Pull (72.523,-45.71) (72.523,-45.71),Pull (72.523,-45.40) (72.523,-45.09),Pull (72.677,-44.47) (72.832,-43.85),Pull (73.297,-43.69) (73.762,-43.54),Pull (73.762,-3.409) (73.762,36.726),Pull (73.297,37.191) (72.832,37.656),Pull (72.677,38.276) (72.523,38.895),Pull (72.523,39.205) (72.523,39.515),Pull (72.213,39.825) (71.903,40.135),Pull (72.213,40.600) (72.523,41.065),Pull (72.832,41.065) (73.142,41.065),Pull (73.142,42.460) (73.142,43.854),Pull (73.142,43.854) (73.142,43.854),Pull (73.142,44.164) (73.142,44.474),Pull (72.832,44.474) (72.523,44.474),Pull (72.523,44.784) (72.523,45.094),Pull (72.677,45.094) (72.832,45.094),Pull (72.832,45.404) (72.832,45.714),Pull (72.213,46.024) (71.593,46.334),Pull (71.593,46.334) (71.593,46.334),Pull (71.438,46.953) (71.283,47.573),Pull (71.283,47.883) (71.283,48.193),Pull (70.973,48.193) (70.663,48.193),Pull (69.733,48.968) (68.803,49.743),Pull (68.958,49.898) (69.113,50.053),Pull (68.029,50.208) (66.944,50.363),Pull (66.944,51.757) (66.944,53.152)]
      |> outlined (solid 1) (rgb 27 83 141)
      |> move (-165,-0.5)
      |> scaleX 9.5
      |> scaleY 10
      ,
    curve (4.6489,35.486) [Pull (4.6489,-3.099) (4.6489,-41.68),Pull (5.2687,-41.68) (5.8886,-41.68),Pull (6.0435,-41.68) (6.1985,-41.68),Pull (6.0435,-3.099) (5.8886,35.486),Pull (5.2687,35.486) (4.6489,35.486)]
      |> filled (rgb 27 83 141)
      |> move (-94,0)
      |> scaleX 9.5
      |> scaleY 10
      ,
    curve (4.6489,35.486) [Pull (4.6489,-3.099) (4.6489,-41.68),Pull (5.2687,-41.68) (5.8886,-41.68),Pull (6.0435,-41.68) (6.1985,-41.68),Pull (6.0435,-3.099) (5.8886,35.486),Pull (5.2687,35.486) (4.6489,35.486)]
      |> filled (rgb 27 83 141)
      |> move (-92,0)
      |> scaleX 9.5
      |> scaleY 10
      ,
    curve (4.6489,35.486) [Pull (4.6489,-3.099) (4.6489,-41.68),Pull (5.2687,-41.68) (5.8886,-41.68),Pull (6.0435,-41.68) (6.1985,-41.68),Pull (6.0435,-3.099) (5.8886,35.486),Pull (5.2687,35.486) (4.6489,35.486)]
      |> filled (rgb 27 83 141)
      |> move (-90,0)
      |> scaleX 9.5
      |> scaleY 10
      ,
    curve (4.6489,35.486) [Pull (4.6489,-3.099) (4.6489,-41.68),Pull (5.2687,-41.68) (5.8886,-41.68),Pull (6.0435,-41.68) (6.1985,-41.68),Pull (6.0435,-3.099) (5.8886,35.486),Pull (5.2687,35.486) (4.6489,35.486)]
      |> filled (rgb 27 83 141)
      |> move (-88,0)
      |> scaleX 9.5
      |> scaleY 10
      ,
    curve (4.6489,35.486) [Pull (4.6489,-3.099) (4.6489,-41.68),Pull (5.2687,-41.68) (5.8886,-41.68),Pull (6.0435,-41.68) (6.1985,-41.68),Pull (6.0435,-3.099) (5.8886,35.486),Pull (5.2687,35.486) (4.6489,35.486)]
      |> filled (rgb 27 83 141)
      |> move (-86,0)
      |> scaleX 9.5
      |> scaleY 10
      ,
    curve (4.6489,35.486) [Pull (4.6489,-3.099) (4.6489,-41.68),Pull (5.2687,-41.68) (5.8886,-41.68),Pull (6.0435,-41.68) (6.1985,-41.68),Pull (6.0435,-3.099) (5.8886,35.486),Pull (5.2687,35.486) (4.6489,35.486)]
      |> filled (rgb 27 83 141)
      |> move (-84,0)
      |> scaleX 9.5
      |> scaleY 10
      ,
      rect 150 10
      |> filled (rgb 27 83 141)
      |> move (-795,450)
      ,
      rect 150 10
      |> filled (rgb 27 83 141)
      |> move (-795,-430)
      ,
      rect 150 10
      |> filled (rgb 27 83 141)
      |> move (-795,370)
      ,
      rect 150 10
      |> filled (rgb 27 83 141)
      |> move (-795,-500)
  ]

historyOfAlgorithms2: SlideInput -> Shape Msg
historyOfAlgorithms2 input = 
  group
  [
    rect screen.x screen.y
    |> filled white
    ,
    [
    text "0111010001100001011011010110100101101100010101010101010101010101000101"
    |> size 10 
    |> filled yellow
    |> move (sin(input.time) * 10- 150, 50)
    |> makeTransparent 0.3
    ,
    text "0001101100011000010010000001101101011000010110010001100101001000000111010001101000011010010111001100100000011000010110110101100001011110100110100101101110011001110010000001110000011100100110010101110100011101000111100100100000011000110111001001100101011000010111010001101001011101100110010100100000011100110110110001101001011001000110010100100000011101110110111101110111001000000111001101101111001000000110001101101111011011110110110000100000011011110110110101100111"
    |> size 10 
    |> filled blue
    |> move (sin(input.time) * -10- 150, 40)
    |> makeTransparent 0.2
    ,
    text "0001101100011000010010000001101101011000010110010001100101001000000111010001101000011010010111001100100000011000010110110101100001011110100110100101101110011001110010000001110000011100100110010101110100011101000111100100100000011000110111001001100101011000010111010001101001011101100110010100100000011100110110110001101001011001000110010100100000011101110110111101110111001000000111001101101111001000000110001101101111011011110110110000100000011011110110110101100111"
    |> size 10 
    |> filled red
    |> move (sin(input.time) * 10- 150, 30)
    |> makeTransparent 0.2
    ,
    text "0001101100011000010010000001101101011000010110010001100101001000000111010001101000011010010111001100100000011000010110110101100001011110100110100101101110011001110010000001110000011100100110010101110100011101000111100100100000011000110111001001100101011000010111010001101001011101100110010100100000011100110110110001101001011001000110010100100000011101110110111101110111001000000111001101101111001000000110001101101111011011110110110000100000011011110110110101100111"
    |> size 10 
    |> filled black
    |> move (sin(input.time) * -10- 150, 20)
    |> makeTransparent 0.2
    ,
    text "0111010001100011011011010110100101101110101010111010101001010100"
    |> size 10 
    |> filled yellow
    |> move (sin(input.time) * 10- 150, 10)
    |> makeTransparent 0.3
    ,
    text "011101000110000101101101011010010110110001010101101101010101001"
    |> size 10 
    |> filled blue
    |> move (sin(input.time) * -10- 150, 0)
    |> makeTransparent 0.3
    ,
    text "1010101001110100101011001010110101011010101101011101000101010101101"
    |> size 10 
    |> filled red
    |> move (sin(input.time) * 10- 150, -10)
    |> makeTransparent 0.3
    ,
    text "101000010101110100010101010010101011101011001010101001001010101101"
    |> size 10 
    |> filled black
    |> move (sin(input.time) * -10- 150, -20)
    |> makeTransparent 0.3
        ,
    text "101010100111010010101100101011010101101010101011110101001110101110"
    |> size 10 
    |> filled yellow
    |> move (sin(input.time) * 10- 150, -30)
    |> makeTransparent 0.3
        ,
    text "10111010110101010001010110101010001010100101011010111010010010110"
    |> size 10 
    |> filled blue
    |> move (sin(input.time) * -10- 150, -40)
    |> makeTransparent 0.3
        ,
    text "1110101010101000101110100100101000101010110101000111010101011101"
    |> size 10 
    |> filled red
    |> move (sin(input.time) * 10- 150, -50)
    |> makeTransparent 0.3
            ,
    text "0100101101101001001010100100100101001010111010101001010101010101"
    |> size 10 
    |> filled black
    |> move (sin(input.time) * -10- 150, -60)
    |> makeTransparent 0.3
    ,
    text "The Godfather of the Modern Algorithm"
    |> size 10 
    |> centered
    |> filled black
    |> move (0,35)
    |> makeTransparent 2.75
    ,
    curve (-42.25,-3.728) [Pull (-42.09,-14.91) (-41.94,-26.09),Pull (-7.922,-26.25) (26.097,-26.40),Pull (25.320,-24.23) (24.543,-22.05),Pull (13.048,-4.038) (1.5533,13.980),Pull (0.3106,14.446) (-0.932,14.912),Pull (-3.417,14.446) (-5.902,13.980),Pull (-11.33,14.135) (-16.77,14.291),Pull (-21.28,13.825) (-25.78,13.359),Pull (-30.60,9.3203) (-35.41,5.2815),Pull (-38.83,1.0873) (-42.25,-3.106),Pull (-42.25,-3.417) (-42.25,-3.728)]
   |> filled (rgb 1 50 32)
   |> move (10,-30)
   ,
   curve (-9.631,48.155) [Pull (-14.44,40.854) (-19.26,33.553),Pull (-18.48,28.737) (-17.70,23.922),Pull (-17.08,22.213) (-16.46,20.504),Pull (-16,19.417) (-15.53,18.330),Pull (-14.91,17.242) (-14.29,16.155),Pull (-13.20,15.689) (-12.11,15.223),Pull (-11.02,15.067) (-9.941,14.912),Pull (-9.320,14.757) (-8.699,14.601),Pull (-7.456,14.601) (-6.213,14.601),Pull (-4.970,15.067) (-3.728,15.533),Pull (-1.087,16.932) (1.5533,18.330),Pull (1.7087,25.631) (1.8640,32.932),Pull (1.0873,36.349) (0.3106,39.766),Pull (-2.796,42.718) (-5.902,45.669),Pull (-7.766,47.067) (-9.631,48.466)]
   |> filled (rgb 232 220 202)
   |> move (10,-30)
   ,
      curve (-12.39,54.392) [Pull (-13.48,55.322) (-14.56,56.251),Pull (-16.58,56.096) (-18.59,55.941),Pull (-19.83,55.167) (-21.07,54.392),Pull (-21.07,54.082) (-21.07,53.772),Pull (-22.15,53.617) (-23.24,53.462),Pull (-24.63,52.377) (-26.03,51.292),Pull (-26.18,50.828) (-26.34,50.363),Pull (-26.34,47.883) (-26.34,45.404),Pull (-26.80,44.784) (-27.27,44.164),Pull (-28.20,44.009) (-29.13,43.854),Pull (-29.90,43.234) (-30.68,42.615),Pull (-30.68,41.685) (-30.68,40.755),Pull (-30.06,39.205) (-29.44,37.656),Pull (-29.44,37.191) (-29.44,36.726),Pull (-30.99,35.331) (-32.54,33.937),Pull (-32.23,31.302) (-31.92,28.668),Pull (-31.45,28.048) (-30.99,27.428),Pull (-31.14,27.118) (-31.30,26.808),Pull (-32.23,26.033) (-33.16,25.259),Pull (-33.16,24.794) (-33.16,24.329),Pull (-32.07,24.329) (-30.99,24.329),Pull (-30.68,23.864) (-30.37,23.399),Pull (-31.61,21.849) (-32.85,20.300),Pull (-32.23,19.680) (-31.61,19.060),Pull (-31.92,18.130) (-32.23,17.200),Pull (-31.45,16.891) (-30.68,16.581),Pull (-31.92,15.496) (-33.16,14.411),Pull (-33.16,12.397) (-33.16,10.382),Pull (-33.47,10.537) (-33.78,10.692),Pull (-35.17,9.2978) (-36.57,7.9031),Pull (-36.26,7.4382) (-35.95,6.9733),Pull (-35.02,6.8184) (-34.09,6.6634),Pull (-35.33,6.0435) (-36.57,5.4237),Pull (-36.72,4.6489) (-36.88,3.8740),Pull (-37.03,4.1840) (-37.19,4.4939),Pull (-40.13,1.5496) (-43.07,-1.394),Pull (-43.07,-2.169) (-43.07,-2.944),Pull (-42.46,-3.409) (-41.84,-3.874),Pull (-41.06,-3.874) (-40.29,-3.874),Pull (-33.47,2.7893) (-26.65,9.4527),Pull (-26.03,9.1428) (-25.41,8.8329),Pull (-23.86,8.3680) (-22.31,7.9031),Pull (-20.92,8.0581) (-19.52,8.2130),Pull (-20.45,7.2832) (-21.38,6.3535),Pull (-21.53,5.1138) (-21.69,3.8740),Pull (-21.23,3.0992) (-20.76,2.3244),Pull (-19.83,2.7893) (-18.90,3.2542),Pull (-18.90,2.3244) (-18.90,1.3946),Pull (-19.06,0.9297) (-19.21,0.4648),Pull (-18.90,-0.309) (-18.59,-1.084),Pull (-18.44,-1.549) (-18.28,-2.014),Pull (-17.82,-2.479) (-17.35,-2.944),Pull (-16.73,-2.944) (-16.11,-2.944),Pull (-15.49,-2.014) (-14.87,-1.084),Pull (-14.41,-2.944) (-13.94,-4.803),Pull (-13.17,-4.958) (-12.39,-5.113),Pull (-11.93,-4.803) (-11.46,-4.493),Pull (-11.46,-4.029) (-11.46,-3.564),Pull (-10.38,-3.254) (-9.297,-2.944),Pull (-8.987,-2.479) (-8.677,-2.014),Pull (-8.987,0) (-9.297,2.0145),Pull (-9.917,4.0290) (-10.53,6.0435),Pull (-11.93,6.3535) (-13.32,6.6634),Pull (-12.70,8.5230) (-12.08,10.382),Pull (-12.55,11.312) (-13.01,12.242),Pull (-13.94,12.552) (-14.87,12.861),Pull (-15.18,14.256) (-15.49,15.651),Pull (-15.80,16.116) (-16.11,16.581),Pull (-16.42,16.891) (-16.73,17.200),Pull (-16.27,17.820) (-15.80,18.440),Pull (-16.58,19.060) (-17.35,19.680),Pull (-16.58,20.455) (-15.80,21.230),Pull (-16.11,22.314) (-16.42,23.399),Pull (-16.58,24.019) (-16.73,24.639),Pull (-17.35,24.639) (-17.97,24.639),Pull (-17.97,24.949) (-17.97,25.259),Pull (-16.89,26.343) (-15.80,27.428),Pull (-16.58,28.668) (-17.35,29.907),Pull (-17.35,30.527) (-17.35,31.147),Pull (-16.73,31.457) (-16.11,31.767),Pull (-15.96,31.767) (-15.80,31.767),Pull (-15.65,32.542) (-15.49,33.317),Pull (-16.11,34.092) (-16.73,34.866),Pull (-15.96,35.486) (-15.18,36.106),Pull (-14.87,36.106) (-14.56,36.106),Pull (-14.41,36.571) (-14.25,37.036),Pull (-14.56,37.501) (-14.87,37.966),Pull (-14.56,38.895) (-14.25,39.825),Pull (-13.48,40.445) (-12.70,41.065),Pull (-12.86,41.530) (-13.01,41.995),Pull (-13.01,42.150) (-13.01,42.305),Pull (-11.62,42.924) (-10.22,43.544),Pull (-9.762,44.164) (-9.297,44.784),Pull (-9.452,47.418) (-9.607,50.053),Pull (-10.22,51.602) (-10.84,53.152),Pull (-9.917,49.898) (-8.987,46.644),Pull (-8.677,45.869) (-8.368,45.094),Pull (-8.368,44.629) (-8.368,44.164),Pull (-6.198,42.924) (-4.029,41.685),Pull (-3.564,41.065) (-3.099,40.445),Pull (-2.789,40.135) (-2.479,39.825),Pull (-1.859,39.825) (-1.239,39.825),Pull (-0.309,36.726) (0.6198,33.627),Pull (0.7748,29.907) (0.9297,26.188),Pull (0.6198,24.484) (0.3099,22.779),Pull (0.3099,21.694) (0.3099,20.610),Pull (0.3099,19.990) (0.3099,19.370),Pull (-0.154,18.440) (-0.619,17.510),Pull (-1.549,16.736) (-2.479,15.961),Pull (-3.099,15.806) (-3.719,15.651),Pull (-4.029,15.341) (-4.338,15.031),Pull (-2.479,13.016) (-0.619,11.002),Pull (-0.464,10.537) (-0.309,10.072),Pull (-0.154,9.1428) (0,8.2130),Pull (0.1549,6.8184) (0.3099,5.4237),Pull (0.1549,4.0290) (0,2.6343),Pull (0,1.5496) (0,0.4648),Pull (0.3099,-0.774) (0.6198,-2.014),Pull (0.7748,-2.634) (0.9297,-3.254),Pull (1.5496,-4.648) (2.1694,-6.043),Pull (2.7893,-6.198) (3.4092,-6.353),Pull (3.7191,-7.128) (4.0290,-7.903),Pull (3.5641,-9.142) (3.0992,-10.38),Pull (3.0992,-10.69) (3.0992,-11.00),Pull (4.9588,-11.46) (6.8184,-11.93),Pull (7.9031,-14.72) (8.9878,-17.51),Pull (9.9176,-18.44) (10.847,-19.37),Pull (12.552,-20.92) (14.256,-22.46),Pull (15.031,-22.77) (15.806,-23.08),Pull (16.426,-20.92) (17.046,-18.75),Pull (17.200,-18.28) (17.355,-17.82),Pull (17.510,-18.13) (17.665,-18.44),Pull (17.820,-18.59) (17.975,-18.75),Pull (19.060,-19.06) (20.145,-19.37),Pull (20.920,-19.68) (21.694,-19.99),Pull (22.469,-20.92) (23.244,-21.84),Pull (23.554,-20.92) (23.864,-19.99),Pull (23.089,-17.51) (22.314,-15.03),Pull (21.384,-14.10) (20.455,-13.17),Pull (21.075,-12.08) (21.694,-11.00),Pull (19.835,-9.142) (17.975,-7.283),Pull (17.510,-5.113) (17.046,-2.944),Pull (16.581,-2.479) (16.116,-2.014),Pull (14.256,-2.169) (12.397,-2.324),Pull (11.622,-1.704) (10.847,-1.084),Pull (11.002,-0.619) (11.157,-0.154),Pull (11.932,0.1549) (12.707,0.4648),Pull (12.861,2.3244) (13.016,4.1840),Pull (12.707,5.4237) (12.397,6.6634),Pull (11.312,7.1283) (10.227,7.5932),Pull (10.382,8.3680) (10.537,9.1428),Pull (10.227,9.7627) (9.9176,10.382),Pull (9.9176,12.397) (9.9176,14.411),Pull (8.6779,14.876) (7.4382,15.341),Pull (7.2832,15.651) (7.1283,15.961),Pull (7.7481,17.200) (8.3680,18.440),Pull (7.2832,19.835) (6.1985,21.230),Pull (6.3535,21.849) (6.5084,22.469),Pull (7.1283,22.934) (7.7481,23.399),Pull (7.7481,23.864) (7.7481,24.329),Pull (7.4382,24.639) (7.1283,24.949),Pull (6.8184,24.949) (6.5084,24.949),Pull (6.6634,26.343) (6.8184,27.738),Pull (6.6634,28.668) (6.5084,29.598),Pull (5.7336,30.682) (4.9588,31.767),Pull (4.9588,33.162) (4.9588,34.556),Pull (4.3389,35.021) (3.7191,35.486),Pull (4.3389,37.811) (4.9588,40.135),Pull (4.8038,40.755) (4.6489,41.375),Pull (4.0290,41.995) (3.4092,42.615),Pull (2.9443,43.544) (2.4794,44.474),Pull (2.3244,45.249) (2.1694,46.024),Pull (1.3946,46.799) (0.6198,47.573),Pull (0.6198,49.898) (0.6198,52.222),Pull (0.1549,52.687) (-0.309,53.152),Pull (-2.014,53.927) (-3.719,54.702),Pull (-4.184,54.857) (-4.648,55.012),Pull (-6.198,55.941) (-7.748,56.871),Pull (-8.368,56.871) (-8.987,56.871),Pull (-10.22,55.941) (-11.46,55.012),Pull (-11.93,54.857) (-12.39,54.702),Pull (-12.24,54.547) (-12.08,54.392)]
    |> filled black 
    |> move (10,-30)
    ,
    curve (-40.38,-4.038) [Pull (-38.67,-3.417) (-36.97,-2.796),Pull (-35.72,-2.640) (-34.48,-2.485),Pull (-33.86,-2.330) (-33.24,-2.174),Pull (-32.46,-2.174) (-31.68,-2.174),Pull (-31.22,-2.330) (-30.75,-2.485),Pull (-30.29,-3.417) (-29.82,-4.349),Pull (-29.51,-4.815) (-29.20,-5.281),Pull (-29.04,-5.747) (-28.89,-6.213),Pull (-28.11,-7.145) (-27.33,-8.077),Pull (-26.56,-8.854) (-25.78,-9.631),Pull (-25.00,-10.09) (-24.23,-10.56),Pull (-23.30,-10.40) (-22.36,-10.25),Pull (-22.05,-10.40) (-21.74,-10.56),Pull (-21.28,-11.18) (-20.81,-11.80),Pull (-19.88,-12.42) (-18.95,-13.04),Pull (-18.48,-13.51) (-18.01,-13.98),Pull (-17.86,-13.98) (-17.70,-13.98),Pull (-13.66,-18.79) (-9.631,-23.61),Pull (-7.145,-23.61) (-4.660,-23.61),Pull (-7.611,-15.53) (-10.56,-7.456),Pull (-10.25,-6.368) (-9.941,-5.281),Pull (-10.56,-4.660) (-11.18,-4.038),Pull (-13.20,-4.970) (-15.22,-5.902),Pull (-14.75,-6.368) (-14.29,-6.834),Pull (-13.98,-7.611) (-13.66,-8.388),Pull (-13.51,-8.854) (-13.35,-9.320),Pull (-12.11,-8.388) (-10.87,-7.456),Pull (-7.766,-15.53) (-4.660,-23.61),Pull (-3.417,-23.14) (-2.174,-22.67),Pull (0.3106,-20.97) (2.7961,-19.26),Pull (3.1067,-18.95) (3.4174,-18.64),Pull (3.5728,-18.01) (3.7281,-17.39),Pull (2.0194,-15.53) (0.3106,-13.66),Pull (-0.310,-11.33) (-0.932,-9.009),Pull (-1.087,-8.699) (-1.242,-8.388),Pull (-0.932,-7.766) (-0.621,-7.145),Pull (0,-7.300) (0.6213,-7.456),Pull (1.0873,-7.766) (1.5533,-8.077),Pull (1.3980,-6.368) (1.2427,-4.660),Pull (0.3106,-2.951) (-0.621,-1.242),Pull (-2.019,1.2427) (-3.417,3.7281),Pull (-4.504,5.1262) (-5.592,6.5242),Pull (-5.592,8.8543) (-5.592,11.184),Pull (-5.436,11.961) (-5.281,12.737),Pull (-5.592,13.669) (-5.902,14.601),Pull (-6.834,14.601) (-7.766,14.601),Pull (-8.543,14.601) (-9.320,14.601),Pull (-9.941,14.601) (-10.56,14.601),Pull (-11.80,15.067) (-13.04,15.533),Pull (-13.82,16.310) (-14.60,17.087),Pull (-15.06,18.174) (-15.53,19.262),Pull (-13.51,15.378) (-11.49,11.495),Pull (-10.71,11.495) (-9.941,11.495),Pull (-7.922,11.029) (-5.902,10.563),Pull (-5.902,8.5436) (-5.902,6.5242),Pull (-8.388,8.5436) (-10.87,10.563),Pull (-12.42,12.427) (-13.98,14.291),Pull (-7.611,3.1067) (-1.242,-8.077),Pull (-7.766,3.2621) (-14.29,14.601),Pull (-17.24,11.650) (-20.19,8.6990),Pull (-21.12,8.2330) (-22.05,7.7669),Pull (-23.92,8.0776) (-25.78,8.3883),Pull (-26.25,8.3883) (-26.71,8.3883),Pull (-27.18,7.4563) (-27.65,6.5242),Pull (-27.49,6.5242) (-27.33,6.5242),Pull (-26.71,6.3689) (-26.09,6.2135),Pull (-25.63,6.3689) (-25.16,6.5242),Pull (-24.85,5.9029) (-24.54,5.2815),Pull (-23.14,3.8834) (-21.74,2.4854),Pull (-27.49,1.2427) (-33.24,0),Pull (-32.15,-0.310) (-31.06,-0.621),Pull (-30.29,-0.776) (-29.51,-0.932),Pull (-29.04,-1.553) (-28.58,-2.174),Pull (-25.00,-5.902) (-21.43,-9.631),Pull (-21.59,-9.941) (-21.74,-10.25)]
   |> filled (rgb 24 70 50)
   |> move (10,-30)
   ,
   curve (-9.631,33.864) [Pull (-10.87,34.174) (-12.11,34.485),Pull (-12.58,34.485) (-13.04,34.485),Pull (-13.98,34.019) (-14.91,33.553),Pull (-14.91,33.708) (-14.91,33.864)]
   |> filled darkBrown
   |> move (10,-30)
   ,
   curve (-9.941,32.310) [Pull (-10.87,32.466) (-11.80,32.621),Pull (-12.11,32.621) (-12.42,32.621),Pull (-12.42,32.621) (-12.42,32.621),Pull (-12.58,32.466) (-12.73,32.310),Pull (-13.04,32.310) (-13.35,32.310),Pull (-13.51,32.155) (-13.66,32),Pull (-13.82,31.844) (-13.98,31.689)]
   |> filled black
   |> move (10,-30)
   ,
  curve (-13.35,31.067) [Pull (-12.73,31.067) (-12.11,31.067),Pull (-12.27,31.067) (-12.42,31.067),Pull (-12.58,31.223) (-12.73,31.378),Pull (-12.89,31.533) (-13.04,31.689),Pull (-13.04,31.844) (-13.04,32),Pull (-12.73,32.155) (-12.42,32.310),Pull (-12.27,32.310) (-12.11,32.310),Pull (-11.96,32.155) (-11.80,32),Pull (-11.65,31.844) (-11.49,31.689),Pull (-11.80,31.533) (-12.11,31.378),Pull (-12.11,31.378) (-12.11,31.378),Pull (-12.27,31.378) (-12.42,31.378),Pull (-12.27,31.223) (-12.11,31.067),Pull (-11.96,31.067) (-11.80,31.067),Pull (-11.65,31.067) (-11.49,31.067)]
   |> filled black
   |> move (10,-30)
   ,
   curve (-12.73,29.825) [Pull (-12.27,29.825) (-11.80,29.825),Pull (-11.65,29.825) (-11.49,29.825),Pull (-11.18,29.980) (-10.87,30.135)]
   |> filled black
   |> move (10,-30)
   ,
  curve (-5.592,33.242) [Pull (-5.592,32.932) (-5.592,32.621),Pull (-5.592,32.310) (-5.592,32),Pull (-5.592,31.689) (-5.592,31.378),Pull (-5.436,30.757) (-5.281,30.135),Pull (-5.126,29.669) (-4.970,29.203),Pull (-4.815,28.737) (-4.660,28.271),Pull (-4.504,27.805) (-4.349,27.339),Pull (-4.194,27.029) (-4.038,26.718),Pull (-3.883,26.407) (-3.728,26.097),Pull (-3.728,25.786) (-3.728,25.475),Pull (-3.728,25.165) (-3.728,24.854),Pull (-3.728,24.699) (-3.728,24.543),Pull (-4.038,24.388) (-4.349,24.233),Pull (-4.815,24.388) (-5.281,24.543),Pull (-5.747,24.543) (-6.213,24.543),Pull (-6.834,24.699) (-7.456,24.854),Pull (-7.766,24.699) (-8.077,24.543),Pull (-8.233,24.699) (-8.388,24.854),Pull (-8.699,25.009) (-9.009,25.165),Pull (-8.854,25.475) (-8.699,25.786)]
   |> filled (rgb 207 185 151)
   |> move (10,-30)
   ,
   curve (-5.281,33.553) [Pull (-4.349,34.330) (-3.417,35.106),Pull (-3.262,35.106) (-3.106,35.106),Pull (-2.951,35.106) (-2.796,35.106),Pull (-2.640,35.106) (-2.485,35.106),Pull (-2.330,35.106) (-2.174,35.106),Pull (-1.553,34.796) (-0.932,34.485)]
   |> filled darkBrown
   |> move (10,-30)
   ,
  curve (-5.281,32.310) [Pull (-4.970,32.466) (-4.660,32.621),Pull (-4.504,32.466) (-4.349,32.310),Pull (-4.194,32.310) (-4.038,32.310),Pull (-3.883,32.155) (-3.728,32),Pull (-3.417,32.155) (-3.106,32.310),Pull (-2.951,32.466) (-2.796,32.621),Pull (-2.640,32.776) (-2.485,32.932),Pull (-1.864,32.776) (-1.242,32.621),Pull (-1.242,32.776) (-1.242,32.932),Pull (-2.174,33.242) (-3.106,33.553),Pull (-3.883,33.087) (-5.281,32.310)]
   |> filled black
   |> move (10,-30)
   ,
   curve (-1.864,32) [Pull (-2.019,31.689) (-2.174,31.378),Pull (-2.485,31.378) (-2.796,31.378),Pull (-2.951,31.378) (-3.106,31.378),Pull (-3.417,31.378) (-3.728,31.378),Pull (-4.038,31.378) (-4.349,31.378)]
   |> filled black
   |> move (10,-30)
   ,
  curve (-10.84,21.539) [Pull (-10.69,21.849) (-10.53,22.159),Pull (-10.07,22.004) (-9.607,21.849),Pull (-9.297,21.849) (-8.987,21.849),Pull (-8.832,21.694) (-8.677,21.539),Pull (-8.368,21.539) (-8.058,21.539),Pull (-7.903,21.384) (-7.748,21.230),Pull (-7.438,21.230) (-7.128,21.230),Pull (-6.973,21.230) (-6.818,21.230),Pull (-6.508,21.539) (-6.198,21.849),Pull (-5.888,21.694) (-5.578,21.539),Pull (-5.423,21.384) (-5.268,21.230),Pull (-4.958,21.384) (-4.648,21.539),Pull (-4.648,21.694) (-4.648,21.849),Pull (-4.493,21.694) (-4.338,21.539),Pull (-4.029,21.539) (-3.719,21.539),Pull (-3.254,21.849) (-2.789,22.159)]
   |> filled (rgb 225 149 139)
   |> move (10,-30)
   ,
   curve (-8.677,20.610) [Pull (-8.368,20.300) (-8.058,19.990),Pull (-7.903,19.835) (-7.748,19.680),Pull (-6.973,19.680) (-6.198,19.680),Pull (-5.733,19.680) (-5.268,19.680),Pull (-4.958,19.835) (-4.648,19.990),Pull (-4.648,19.990) (-4.648,19.990),Pull (-4.493,19.990) (-4.338,19.990)]
   |> filled (rgb 225 149 139)
   |> move (10,-30)
   ,
   curve (-9.917,18.130) [Pull (-9.452,17.665) (-8.987,17.200),Pull (-8.677,17.046) (-8.368,16.891),Pull (-7.748,16.581) (-7.128,16.271),Pull (-6.663,16.271) (-6.198,16.271),Pull (-6.043,16.271) (-5.888,16.271),Pull (-5.268,16.581) (-4.648,16.891),Pull (-4.029,17.355) (-3.409,17.820)]
   |> filled (rgb 207 185 151)
   |> move (10,-30)
  ]
  |> List.map (scale 10)
  |> List.map clipToScreen
  |> group
  ,
    rect screen.x 100
    |> filled blue
    |> move (0,520)
    |> clipToScreen
     ,
    rect 100 screen.y
    |> filled blue
    |> move (930,0)
    |> clipToScreen
    ,
    rect screen.x 100
    |> filled blue
    |> move (0,-520)
    |> clipToScreen
    ,
    rect 100 screen.y
    |> filled blue
    |> move (-930,0)
    |> clipToScreen
  ]
  |> transition [(bounceBack 1000 0)] input.transitionTime input.state
